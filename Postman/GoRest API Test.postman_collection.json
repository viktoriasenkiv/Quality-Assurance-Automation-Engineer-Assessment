{
	"info": {
		"_postman_id": "e2658c9f-7cf0-4b48-a5c8-e92afb1d207c",
		"name": "GoRest API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43511952",
		"_collection_link": "https://viktoriasenkiv-9493978.postman.co/workspace/Viktoria-Senkiv's-Workspace~065475be-9e11-4499-8d67-c7284078ee31/collection/43511952-e2658c9f-7cf0-4b48-a5c8-e92afb1d207c?action=share&source=collection_link&creator=43511952"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"let response = pm.response.json();",
							"",
							"pm.globals.set(\"newUserId\", response.id);",
							"",
							"pm.test(\"Response contains expected properties\", function () {",
							"    pm.expect(response).to.have.property(\"id\");",
							"    pm.expect(response).to.have.property(\"name\", \"Viktoria Automation\");",
							"    pm.expect(response).to.have.property(\"email\", \"viktoriaautomation@mockemail.com\");",
							"    pm.expect(response).to.have.property(\"gender\", \"female\");",
							"    pm.expect(response).to.have.property(\"status\", \"active\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "31406f97265e6f8e8a464f1c732c4d2cdb606a8ee7242b6b672c13662edb1e30",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Viktoria Automation\",\n  \"email\": \"viktoriaautomation@mockemail.com\",\n  \"gender\": \"female\",\n  \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let response = pm.response.json();",
							"",
							"pm.test(\"Response contains expected properties\", function () {",
							"    pm.expect(response).to.have.property(\"id\");",
							"    pm.expect(response).to.have.property(\"name\");",
							"    pm.expect(response).to.have.property(\"email\");",
							"    pm.expect(response).to.have.property(\"gender\");",
							"    pm.expect(response).to.have.property(\"status\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "31406f97265e6f8e8a464f1c732c4d2cdb606a8ee7242b6b672c13662edb1e30",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{newUserId}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{newUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Response body should be empty\", function () {",
							"    pm.expect(pm.response.text()).to.be.empty;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "31406f97265e6f8e8a464f1c732c4d2cdb606a8ee7242b6b672c13662edb1e30",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{newUserId}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{newUserId}}"
					]
				}
			},
			"response": []
		}
	]
}